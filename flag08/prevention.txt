Why it is dangerous ?
If you can bruteforce a login page or a URL to find special files, then you let the attacker having access to more data than usual data needed by a random user. Which can be a default of protection.
Then if a website let the bruteforce being possible, he will be able to try any kind of login and password until he gets access to someone else's account. More critical, the attack can be targeted on a specific user, then with a string password's dictionnary, the attacker can try many passwords until he gets the access. That's why as a user, it is very important to use not common password, but a strong and complex one.
Although brute-force attacks are difficult to stop completely, they are easy to detect because each failed login attempt records an HTTP 401 status code in your Web server logs. It is important to monitor your logfiles for brute-force attacks â€“ in particular, the intermingled 200 statuscodes that mean the attacker found a valid password.

How to prevent it ?
- You can use denfensive tools like: Php-Brute-Force-Attack Detector
- Try to block any IP that has done multiple failed requests under a certain amuont of time. For example, if an attacker try to bruteforce the login page, block after 10 requests under 2 minutes
- Use delay of 2 seconds between each loging in if the password is incorrect.
- Add security measure for login like 2FA, security question, or a code received in the username mailbox to input.
- Use a CAPTCHA to prevent automated attacks
- Assign unique login URLs to blocks of users so that not all users can access the site from the same URL.

Refs:
- https://owasp.org/www-community/attacks/Brute_force_attack
- https://owasp.org/www-community/controls/Blocking_Brute_Force_Attacks
interesting as well:
- https://owasp.org/www-community/attacks/Password_Spraying_Attack